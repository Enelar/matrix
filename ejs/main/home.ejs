<canvas></canvas>

<%
debugger;
__this.Defer(function()
{
  var c = __this.first()[0];
  var ctx = c.getContext("2d");

  //making the canvas full screen
  c.height = window.innerHeight;
  c.width = window.innerWidth;

  //chinese characters - taken from the unicode charset
  var chinese = "田由甲申甴电甶男甸甹町画甼甽甾甿畀畁畂畃畄畅畆畇畈畉畊畋界畍畎畏畐畑";
  //converting the string into an array of single characters
  chinese = chinese.split("");

  var columns = img.width; // number of columns equal to image width
  var font_size = c.width / columns; // width of each character
  //an array of drops - one per column
  var drops = [];
  //x below is the x coordinate
  //1 = y co-ordinate of the drop(same for every drop initially)
  for(var x = 0; x < columns; x++)
    drops[x] = 0; // restart imideately

  //drawing the characters
  function draw()
  {
    //Black BG for the canvas
    //translucent BG to show trail
    ctx.fillStyle = "rgba(0, 0, 0, 0.01)";
    ctx.fillRect(0, 0, c.width, c.height);
    
    ctx.fillStyle = "#0F0"; //green text
    ctx.font = font_size + "px arial";
    //looping over drops
    for(var i = 0; i < drops.length; i++)
    {
      var x = i;
      var y = drops[i];

      //a random chinese character to print
      var text = chinese[0*Math.floor(Math.random()*chinese.length)];
      
      var pixel = img.pixel(x, y);

      var slices = 15;
      var max_slices = 15;

      var min = (max_slices - slices);

      var slice = pixel / (256 / slices);
      
      var cur = Math.ceil(min + slice);
      var hex = cur.toString(16);

      ctx.fillStyle = "#0" + hex + "0";

      //x = i*font_size, y = value of drops[i]*font_size
      ctx.fillText(text, x*font_size, y*font_size);
      
      //sending the drop back to the top randomly after it has crossed the screen
      //adding a randomness to the reset to make the drops scattered on the Y axis
      //if(y*font_size > c.height && Math.random() > 0.75)
      if(y*font_size > c.height)
        drops[i] = 0;
      
      //incrementing Y coordinate
      drops[i]++;
    }
  }

  setInterval(draw, 33);

})
%>